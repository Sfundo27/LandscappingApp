@model IEnumerable<AgricultureApp.Models.Product.Order>
@using AgricultureApp.Models;
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
	string id = null;
	var message = TempData["AlertMessage"] ?? string.Empty;
}
<script>
    var msg = '@message';
    if (msg)
        alert(msg);
</script>


<style>

	/*body {
		background-color: #eeeeee;
		font-family: 'Open Sans',serif
	}*/

	.containers {
		/* display:flex;
	   align-content:center;
	   justify-content:center;
	   margin:50px 0 50px 0;*/
		margin: 20% auto auto auto;
		width: 80%;
	}

	.row {
		display: flex;
		width: 100%;
		margin: 0 auto;
	}

	.col {
		width: 100%;
		float: left;
	}

	.card {
		position: relative;
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
		flex-direction: column;
		min-width: 0;
		word-wrap: break-word;
		background-color: #fff;
		background-clip: border-box;
		border: 1px solid rgba(0, 0, 0, 0.1);
		border-radius: 0.10rem
	}

	.card-header:first-child {
		border-radius: calc(0.37rem - 1px) calc(0.37rem - 1px) 0 0
	}

	.card-header {
		padding: 0.75rem 1.25rem;
		margin-bottom: 0;
		background-color: #fff;
		border-bottom: 1px solid rgba(0, 0, 0, 0.1)
	}

	.track {
		position: relative;
		background-color: #ddd;
		height: 7px;
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		margin-bottom: 60px;
		margin-top: 50px
	}

		.track .step {
			-webkit-box-flex: 1;
			-ms-flex-positive: 1;
			flex-grow: 1;
			width: 25%;
			margin-top: -18px;
			text-align: center;
			position: relative
		}

			.track .step.active:before {
				background: #FF5722
			}

			.track .step::before {
				height: 7px;
				position: absolute;
				content: "";
				width: 100%;
				left: 0;
				top: 18px
			}

			.track .step.active .icon {
				background: #ee5435;
				color: #fff
			}

		.track .icon {
			display: inline-block;
			width: 40px;
			height: 40px;
			line-height: 40px;
			position: relative;
			border-radius: 100%;
			background: #ddd
		}

		.track .step.active .text {
			font-weight: 400;
			color: #000
		}

		.track .text {
			display: block;
			margin-top: 7px
		}

	.itemside {
		position: relative;
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		width: 100%
	}

		.itemside .aside {
			position: relative;
			-ms-flex-negative: 0;
			flex-shrink: 0
		}

	.img-sm {
		width: 80px;
		height: 80px;
		padding: 7px
	}

	ul.row, ul.row-sm {
		list-style: none;
		padding: 0
	}

	.itemside .info {
		padding-left: 15px;
		padding-right: 7px
	}

	.itemside .title {
		display: block;
		margin-bottom: 5px;
		color: #212529
	}

	p {
		margin-top: 0;
		margin-bottom: 1rem
	}

	.btn-warning {
		color: #ffffff;
		background-color: #ee5435;
		border-color: #ee5435;
		border-radius: 1px
	}

		.btn-warning:hover {
			color: #ffffff;
			background-color: #ff2b00;
			border-color: #ff2b00;
			border-radius: 1px
		}
</style>


@if (Model.Count() <= 0)
{
	<section class="ad-post bg-gray py-5">
		<div class="container">
			<h2 style="text-align:center">Orders </h2>
			<fieldset class="border border-gary p-4 mb-5">
				<div class="row">
					<div class="col-md-12">
						<div class="alert alert-warning">
							<b>Note :</b> No requests made at the moment.
						</div>
					</div>
				</div>
			</fieldset>
		</div>
	</section>
}

else
{


	foreach (var item in Model)
	{
			<article class="card">
				<div class="card-body" style="padding:30px;">
					<h2>Order # : @Html.DisplayFor(modelItem => item.OrderNo)</h2>
					<article class="card">
						<h3 style="color: red; text-align:center">@Html.DisplayFor(modelItem => item.OrderStatus)</h3><br />
						<div class="card-body row" style="padding:30px;">
							<div class="col">
								<strong>Customer Details:</strong>
								<br><i class="fa fa-id-card"></i> @Html.DisplayFor(modelItem => item.CustomerName)
								<br>	<i class="fa fa-envelope"></i>   @Html.DisplayFor(modelItem => item.CustomerEmail)
							</div>
							<div class="col" style="margin:0 0 0 20px">
								<strong>Status :</strong> @Html.DisplayFor(modelItem => item.OrderStatus)
								<br /><b>Payment status :</b>  @Html.DisplayFor(modelItem => item.PaymentStatus)
								<br /><b>Delivery address :</b>  @Html.DisplayFor(modelItem => item.DeliveryAddress)
							</div>

						</div>

					</article>
					@if (User.IsInRole("Customer") && item.isUpdated == false)
					{
						<hr />
						<a class="btn btn-warning" href="@Url.Action("Update", new { id = item.Id })" title="Update" style="padding:10px;">Update your details </a>
					}

					@if (User.IsInRole("Customer") && item.isUpdated == true && item.isBilled == false)
					{
						<hr />
						@Html.ActionLink("Make payment", "Add_To_Bill", "Orders", new { TotalPrice = item.Total, id=item.Id }, new { @class = "btn btn-info" })
					}

					@if ((User.IsInRole("Driver")) && item.OrderStatus == "Accepted")
					{

						<article class="card">
							<div class="card-body row">
								<div class="col">
									<strong>Assistant:</strong> <br> @Html.DisplayFor(modelItem => item.AssistanceName)
									<br>@Html.DisplayFor(modelItem => item.AssistanceEmail)
								</div>
							</div>
						</article>
					}
				</div>
			</article>
	}
}


